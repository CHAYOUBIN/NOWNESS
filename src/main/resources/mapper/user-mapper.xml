<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="highfive.nowness.repository.UserRepository">
    <resultMap id="userResultMap" type="UserDTO">
        <id property="id" column="id" />
        <result property="email" column="email" />
        <result property="password" column="password" />
        <result property="lastPasswordChangeDateTime" column="last_password_changed" />
        <result property="nickname" column="nickname" />
        <result property="createdDateTime" column="created" />
        <result property="admin" column="admin" />
        <result property="lastLoginIp" column="last_updated_ip" />
    </resultMap>

    <select id="findByEmail" resultMap="userResultMap">
        SELECT * FROM users WHERE email = #{email}
    </select>

    <select id="findByNickname" resultMap="userResultMap">
        SELECT * FROM users WHERE nickname = #{nickname}
    </select>

    <insert id="save" parameterType="UserDTO">
        INSERT INTO users (email, password, nickname, last_updated_ip, verified)
        VALUES (#{email}, #{password}, #{nickname}, #{lastLoginIp}, #{verifiedEmail})
        ON DUPLICATE KEY UPDATE last_updated_ip = #{lastLoginIp}
    </insert>

    <select id="countByEmail" resultType="int">
        SELECT count(id) FROM users WHERE email = #{email}
    </select>

    <select id="countByNickname" resultType="int">
        SELECT count(id) FROM users WHERE nickname = #{nickname}
    </select>

    <insert id="saveUnverifiedEmail">
        INSERT INTO unverified_emails
        VALUES (#{arg0}, #{arg1});
    </insert>

    <select id="verifyEmail" statementType="CALLABLE" parameterType="map">
        {CALL verify_email(#{code, mode=IN, jdbcType=VARCHAR}, #{deletedRows, mode=OUT, jdbcType=INTEGER})}
    </select>
</mapper>